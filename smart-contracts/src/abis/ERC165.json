{
  "contractName": "ERC165",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6756e214b02ceaa9427069697ac1c8b4c9f257beb1ed494aec322f075cb3658f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://715409b50874359a65a036d3b0338fcee5fa1f22ecd38db81a816342d4aa4c08\",\"dweb:/ipfs/QmT7mtWdsgdoJBJyNbdQrrH7rYzSjybwBFmxbKZKeeyiRg\"]},\"project:/src/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc16bb48d8909c3c9667ca8a816bc2dc9d1735311bf8934b1d8f18e9816a1abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94b9e2027ca16ac2b80bf6a3795e253725e0131aec04cadaec06e090d50f3080\",\"dweb:/ipfs/QmZFcCb1QMWQy8pRom8idJK43Jv63crm4Nt67EjHCfe8tm\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060c78061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b604e60383660046062565b6001600160e01b0319166301ffc9a760e01b1490565b604051901515815260200160405180910390f35b600060208284031215607357600080fd5b81356001600160e01b031981168114608a57600080fd5b939250505056fea264697066735822122065a70ee57ed8770f8e4711a9ae7cdad9a16c61221e993615867e42fa2000020364736f6c63430008110033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b604e60383660046062565b6001600160e01b0319166301ffc9a760e01b1490565b604051901515815260200160405180910390f35b600060208284031215607357600080fd5b81356001600160e01b031981168114608a57600080fd5b939250505056fea264697066735822122065a70ee57ed8770f8e4711a9ae7cdad9a16c61221e993615867e42fa2000020364736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:494:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:217:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:20"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:20",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:20",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:20"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:20"
                  },
                  "nodeType": "YulIf",
                  "src": "199:71:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:20",
                "type": ""
              }
            ],
            "src": "14:286:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:92:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "391:4:20",
                "type": ""
              }
            ],
            "src": "305:187:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "351:285:18:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "351:285:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:250;;;;;;:::i;:::-;-1:-1:-1;;;;;;587:40:18;-1:-1:-1;;;587:40:18;;384:250;;;;470:14:20;;463:22;445:41;;433:2;418:18;384:250:18;;;;;;;14:286:20;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:20;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:20:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n// byte 함수 변환의 지문 데이터 계약 추적을 위함\n/* ERC165 표준 : 우리의 계약 데이터가 다른 interface에서 생성된 데이터와 일치하는지 확인 \n    >> 코드 바이팅으로 코드가 몇 바이트를 차지하는지 비교\n\n*/\ncontract ERC165 is IERC165 {\n    function supportsInterface(bytes4 interfaceID)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        // return _supportInterfaces[interfaceID];\n        return interfaceID == type(IERC165).interfaceId;\n    }\n}\n",
  "sourcePath": "/Users/kimyuri/SSAFY/projects/pjt2/repo/S07P22E206/smart-contracts/src/contracts/utils/introspection/ERC165.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/utils/introspection/ERC165.sol",
    "exportedSymbols": {
      "ERC165": [
        2971
      ],
      "IERC165": [
        2983
      ]
    },
    "id": 2972,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2951,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:18"
      },
      {
        "absolutePath": "project:/src/contracts/utils/introspection/IERC165.sol",
        "file": "./IERC165.sol",
        "id": 2952,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2972,
        "sourceUnit": 2984,
        "src": "57:23:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2953,
              "name": "IERC165",
              "nameLocations": [
                "370:7:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2983,
              "src": "370:7:18"
            },
            "id": 2954,
            "nodeType": "InheritanceSpecifier",
            "src": "370:7:18"
          }
        ],
        "canonicalName": "ERC165",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2971,
        "linearizedBaseContracts": [
          2971,
          2983
        ],
        "name": "ERC165",
        "nameLocation": "360:6:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2982
            ],
            "body": {
              "id": 2969,
              "nodeType": "Block",
              "src": "519:115:18",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 2967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2962,
                      "name": "interfaceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2956,
                      "src": "587:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2964,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2983,
                            "src": "607:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$2983_$",
                              "typeString": "type(contract IERC165)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$2983_$",
                              "typeString": "type(contract IERC165)"
                            }
                          ],
                          "id": 2963,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "602:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 2965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "602:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2983",
                          "typeString": "type(contract IERC165)"
                        }
                      },
                      "id": 2966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "616:11:18",
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "602:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "587:40:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2961,
                  "id": 2968,
                  "nodeType": "Return",
                  "src": "580:47:18"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 2970,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "393:17:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2958,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "483:8:18"
            },
            "parameters": {
              "id": 2957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2956,
                  "mutability": "mutable",
                  "name": "interfaceID",
                  "nameLocation": "418:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2970,
                  "src": "411:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2955,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:20:18"
            },
            "returnParameters": {
              "id": 2961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2970,
                  "src": "509:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2959,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "508:6:18"
            },
            "scope": 2971,
            "src": "384:250:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 2972,
        "src": "351:285:18",
        "usedErrors": []
      }
    ],
    "src": "32:605:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-09-22T10:59:27.576Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}